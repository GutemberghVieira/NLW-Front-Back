// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

//Id chave primaria da aplicação

//metodo uuid que que ele vai fazer quando o habito for criado no nlw ele vai prencher esse habito automaticamente com um uuid  universally unique identifier -> indentificador Único Universal ela é uma string bem unica

//prisma Suporta varíos bancos de dados Mongo, cockrooch, SQL

//Salvar Habitos 

generator client {
  provider = "prisma-client-js"
}


generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Habit {
  id         String   @id @default(uuid()) // preencher o arquivo 
  title      String //Título do habito
  created_at DateTime //Data De criação

  dayHabits DayHabit[]
  weekDays HabitWeekDays[]

  @@map("habits") //nome para criar tabelas no plural

}


model HabitWeekDays {
  id       String @id @default(uuid())
  habit_id String
  week_day Int

  habit Habit @relation(fields: [habit_id], references: [id])

  @@unique([habit_id, week_day])
  @@map("habit_week_days")
  
}




model Day {
  id   String   @id @default(uuid())
  date DateTime // só vai ter registro de algum dia se pelo menos o user completar algum habito

  dayHabits DayHabit[]

  @@unique([date]) // cada registro dentro dessa tabela Day precisa ter o campo date unico, não poderá ter dois dias cadastrados aqui dentro
  @@map("days")
}


model DayHabit {
  id String @id @default(uuid())

  day_id   String
  habit_id String // não pode ter o mesmo habito completado duas vezes no mesmo dia
 
  day Day @relation(fields: [day_id], references: [id])
  habit Habit @relation(fields: [habit_id], references:[id])
  


  @@unique([day_id, habit_id])
  @@map("day_habits")
  
}
